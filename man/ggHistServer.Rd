% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggHistServer.R
\name{ggHistServer}
\alias{ggHistServer}
\title{ggHistServer: A Shiny Module Server Function for Generating Histograms}
\usage{
ggHistServer(id, x, title = reactive("Histogram"))
}
\arguments{
\item{id}{A character string or numeric ID that corresponds to the namespace
of the Shiny module. This ID is used to differentiate outputs and inputs
within the module server function.}

\item{x}{A reactive expression that returns the data to be used for the histogram.
This data should be a numeric vector. The function enforces this by checking
that \code{x} is indeed a reactive expression.}

\item{title}{A reactive expression providing the title for the histogram plot.
Defaults to a reactive expression that returns the string "Histogram". This
title is dynamically updated in the plot output based on the value of the
reactive expression.}
}
\value{
The function does not explicitly return a value but registers reactive
output elements for a histogram plot (\code{output$hist}) and a text representation
of the current inputs (\code{output$vals}) within the Shiny application.
}
\description{
This function defines the server-side logic for a Shiny module that creates
interactive histograms based on reactive data inputs. It utilizes ggplot2 for
plotting and allows dynamic adjustment of the number of bins in the histogram.
The module expects reactive expressions for data and the plot title, ensuring
updates are handled automatically as inputs change.
}
\details{
The module server function internally generates a reactive plot object
based on the input data (\code{x}) and dynamically adjusts the histogram's appearance
according to user inputs for the number of bins. The title of the plot is also
reactive, updating as the input \code{title} changes. Additionally, the function
renders a textual output showing the current input values and exports test
values for \code{x} and the internally generated plot object for debugging purposes.
}
